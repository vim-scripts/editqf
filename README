This is a mirror of http://www.vim.org/scripts/script.php?script_id=3557

DESCRIPTION                                             *editqf-description*

This script is a reimplementation and continuation of the QuickFixNotes
script (vimscript#2216). Besides the original functionality of capturing
notes and storing them in a file, this script provides commands for easily
loading the stored data, also for location lists.

Though the main functionality of this script is to make editing of quickfix
entries easy.

I did a screencast giving an overview of the basic functionality of this
plugin. It's available at vimeo: http://vimeo.com/jceb/editqf

This script can be downloaded from vimscript#3557. The latest development
version is available at https://github.com/jceb/vim-editqf.

==========================================================================
USAGE                                                         *editqf-usage*

Create entries in the quickfix list by either running special a command
like :make or :grep or add a note by pressing <leader>n. Then bring up the
quickfix window by running the command :cw.

When you are in the quickfix window navigate to the entry you want to
change. Just press any key that would bring in into insert mode or change
the text like "i".  Automatically a new window will be opened containing
all entries of the quickfix window.

You can use the regular editing commands for editing the entries. Once
you're done, just save the buffer and leave or close the window. I
recommend using :x, because this command does both with just one command.
After that you are brought back to the error you initially started editing
in the quickfix window.

Additionally the plugin provides the following commands that support
storing and restoring quickfix and location lists:
	:QFSave <FILENAME>
	:QFLoad <FILENAME>  " default is to append to the current quickfix list
	:QFLoad! <FILENAME> " replace quickfix list with the contents of file
	:QFAddNote [NOTE]   " add quickfix entry with message NOTE
	:QFAddNote! [NOTE]  " like :QFAddNote but start a new quickfix list
	:QFAddNotePattern[!] [NOTE] " add quickfix entry matching the pattern of the current line

	:LocSave <FILENAME>
	:LocLoad <FILENAME>  " default is to append to the current location list
	:LocLoad! <FILENAME> " replace location list with the contents of file
	:LocAddNote [NOTE]   " add location entry with message NOTE
	:LocAddNote! [NOTE]  " like :LocAddNote but start a new location list
	:LocAddNotePattern[!] [NOTE] " add location entry matching the pattern of the current line

Editqf has integrated support for the hier script (vimscript#3564) which highlights
quickfix errors to make them more visible.

==========================================================================
CUSTOMIZATION                                         *editqf-customization*

The default filename for storing and loading quickfix and location lists is
customizable by setting the following variables in your vimrc:
	let g:editqf_saveqf_filename  = "quickfix.list"
	let g:editqf_saveloc_filename = "location.list"

Jump to the edited error when editing finished:
	let g:editqf_jump_to_error = 1

Store absolute filename when adding a new note
	let g:editqf_store_absolute_filename = 1

The default keybinding <leader>n for adding a quickfix note can be
customized by defining a mapping in your vimrc:
	nmap <leader>n <Plug>QFAddNote
	nmap <leader>N <Plug>QFAddNotePattern
	nmap <leader>l <Plug>LocAddNote
	nmap <leader>L <Plug>LocAddNotePattern

